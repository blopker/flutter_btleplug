// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.72.2.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';
import 'dart:ffi' as ffi;

class BtleplugPlatform extends FlutterRustBridgeBase<BtleplugWire> {
  BtleplugPlatform(ffi.DynamicLibrary dylib) : super(BtleplugWire(dylib));

// Section: api2wire

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_StringList> api2wire_StringList(List<String> raw) {
    final ans = inner.new_StringList_0(raw.length);
    for (var i = 0; i < raw.length; i++) {
      ans.ref.ptr[i] = api2wire_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_0(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }
// Section: finalizer

// Section: api_fill_to_wire
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class BtleplugWire implements FlutterRustBridgeWireBase {
  @internal
  late final dartApi = DartApiDl(init_frb_dart_api_dl);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  BtleplugWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  BtleplugWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  dispatch_queue_t dispatch_queue_create(
    ffi.Pointer<ffi.Char> label,
    dispatch_queue_attr_t attr,
  ) {
    return _dispatch_queue_create(
      label,
      attr,
    );
  }

  late final _dispatch_queue_createPtr = _lookup<
      ffi.NativeFunction<
          dispatch_queue_t Function(ffi.Pointer<ffi.Char>,
              dispatch_queue_attr_t)>>('dispatch_queue_create');
  late final _dispatch_queue_create = _dispatch_queue_createPtr.asFunction<
      dispatch_queue_t Function(
          ffi.Pointer<ffi.Char>, dispatch_queue_attr_t)>();
}

class _Dart_Handle extends ffi.Opaque {}

class dispatch_object_s extends ffi.Opaque {}

typedef dispatch_queue_t = ffi.Pointer<dispatch_object_s>;
typedef dispatch_queue_attr_t = ffi.Pointer<dispatch_object_s>;

const int PERIPHERALSTATE_CONNECTED = 2;

const int CHARACTERISTICPROPERTY_BROADCAST = 1;

const int CHARACTERISTICPROPERTY_READ = 2;

const int CHARACTERISTICPROPERTY_WRITEWITHOUTRESPONSE = 4;

const int CHARACTERISTICPROPERTY_WRITE = 8;

const int CHARACTERISTICPROPERTY_NOTIFY = 16;

const int CHARACTERISTICPROPERTY_INDICATE = 32;

const int CHARACTERISTICPROPERTY_AUTHENTICATEDSIGNEDWRITES = 64;

const int SERVICE_DATA_16_BIT_UUID = 22;

const int SERVICE_DATA_32_BIT_UUID = 32;

const int SERVICE_DATA_128_BIT_UUID = 33;
